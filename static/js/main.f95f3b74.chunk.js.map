{"version":3,"sources":["App.tsx","components/GoodsList.tsx","index.tsx"],"names":["SortType","GoodsList","reorderedGoods","map","good","goodsFromServer","App","useState","isReversed","setReverse","NONE","sortType","setSortType","goods","visibleGoods","sort","first","second","ALPABET","localeCompare","LENGTH","length","reverse","getReorderedGoods","className","type","classNames","onClick","ReactDOM","render","document","getElementById"],"mappings":"6KAmBKA,E,0ECbQC,EAA6B,SAAC,GAAD,IAAGC,EAAH,EAAGA,eAAH,OACxC,6BACGA,EAAeC,KAAI,SAAAC,GAAI,OACtB,oBAAe,UAAQ,OAAvB,SACIA,GADKA,SDHFC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGL,O,eAAAA,I,qBAAAA,I,oBAAAA,M,KAiCE,IAAMM,EAAgB,WAC3B,MAAiCC,oBAAkB,GAAnD,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAgCF,mBAAmBP,EAASU,MAA5D,mBAAOC,EAAP,KAAiBC,EAAjB,KAOMV,EApCD,SACLW,EACAF,EACAH,GAEA,IAAMM,EAAY,YAAOD,GAezB,OAbAC,EAAaC,MAAK,SAACC,EAAOC,GACxB,OAAQN,GACN,KAAKX,EAASkB,QACZ,OAAOF,EAAMG,cAAcF,GAE7B,KAAKjB,EAASoB,OACZ,OAAOJ,EAAMK,OAASJ,EAAOI,OAE/B,QACE,OAAO,MAITb,EACKM,EAAaQ,UAGfR,EAYgBS,CACrBlB,EACAM,EACAH,GAGF,OACE,sBAAKgB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,iBACA,CAAE,WAAYf,IAAaX,EAASkB,UAEtCS,QAAS,kBAAMf,EAAYZ,EAASkB,UANtC,iCAWA,wBACEO,KAAK,SACLD,UAAWE,IACT,oBACA,CAAE,WAAYf,IAAaX,EAASoB,SAEtCO,QAAS,kBAAMf,EAAYZ,EAASoB,SANtC,4BAWA,wBACEK,KAAK,SACLD,UAAWE,IACT,oBACA,CAAE,YAAalB,IAEjBmB,QAAS,kBAAMlB,GAAYD,IAN7B,sBAWGG,GAAYH,IAEP,wBACEiB,KAAK,SACLD,UAAU,4BACVG,QApDG,WACjBf,EAAYZ,EAASU,MACrBD,GAAW,IA+CC,sBAWV,cAAC,EAAD,CAAWP,eAAgBA,QEjHjC0B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.f95f3b74.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\nimport { GoodsList } from './components/GoodsList';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPABET,\n  LENGTH,\n}\n\nexport function getReorderedGoods(\n  goods: string[],\n  sortType: SortType,\n  isReversed: boolean,\n) {\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((first, second) => {\n    switch (sortType) {\n      case SortType.ALPABET:\n        return first.localeCompare(second);\n\n      case SortType.LENGTH:\n        return first.length - second.length;\n\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    return visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [isReversed, setReverse] = useState<boolean>(false);\n  const [sortType, setSortType] = useState<SortType>(SortType.NONE);\n\n  const resetState = () => {\n    setSortType(SortType.NONE);\n    setReverse(false);\n  };\n\n  const reorderedGoods = getReorderedGoods(\n    goodsFromServer,\n    sortType,\n    isReversed,\n  );\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={classNames(\n            'button is-info',\n            { 'is-light': sortType !== SortType.ALPABET },\n          )}\n          onClick={() => setSortType(SortType.ALPABET)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames(\n            'button is-success',\n            { 'is-light': sortType !== SortType.LENGTH },\n          )}\n          onClick={() => setSortType(SortType.LENGTH)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames(\n            'button is-warning',\n            { 'is-light': !isReversed },\n          )}\n          onClick={() => setReverse(!isReversed)}\n        >\n          Reverse\n        </button>\n        {\n          (sortType || isReversed)\n              && (\n                <button\n                  type=\"button\"\n                  className=\"button is-danger is-light\"\n                  onClick={resetState}\n                >\n                  Reset\n                </button>\n              )\n        }\n      </div>\n\n      <GoodsList reorderedGoods={reorderedGoods} />\n    </div>\n  );\n};\n","import React from 'react';\n\ntype Props = {\n  reorderedGoods: string[];\n};\n\nexport const GoodsList: React.FC<Props> = ({ reorderedGoods }) => (\n  <ul>\n    {reorderedGoods.map(good => (\n      <li key={good} data-cy=\"Good\">\n        { good }\n      </li>\n    ))}\n  </ul>\n);\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}